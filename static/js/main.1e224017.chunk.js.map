{"version":3,"sources":["components/budget-total.tsx","components/icon-bin.tsx","components/budget-item.tsx","components/budget-list.tsx","components/budget-item-add.tsx","components/icon-settings.tsx","pages/home.tsx","data/currency-codes.ts","pages/settings.tsx","app-router.tsx","index.tsx"],"names":["BudgetTotal","props","className","budgetPeriod","budgetAmount","budgetPaid","budgetCurrency","IconBin","xmlns","width","id","data-name","viewBox","d","BudgetItem","type","budgetItem","checked","isPaid","onChange","event","handleItemUpdate","target","value","htmlFor","title","date","price","onClick","handleItemRemove","BudgetList","budgetItems","map","item","key","BudgetItemAdd","React","setDate","setTitle","setPrice","setIsPaid","handleShowAddItem","showAddItem","onSubmit","preventDefault","handleAddItem","shortid","generate","required","parseInt","min","step","IconSettings","HomePage","setBudgetPaid","setShowAddItem","handleStorage","task","newState","storageMethod","window","localStorage","setItem","JSON","stringify","getItem","recoveredLocalData","setBudgetItems","parse","sessionStorage","recoveredSessionData","costs","forEach","to","itemProperty","newBudgetItemsState","find","filter","payload","push","currencyCodes","SettingsPage","setBudgetPeriod","name","defaultValue","setBudgetCurrency","list","code","setBudgetAmount","setStorageMethod","AppRouter","length","recoveredSettings","oldBudgetPeriod","oldBudgetCurrency","oldBudgetAmount","oldStorageMethod","recoveredItems","oldItems","removeItem","path","exact","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e224017.chunk.js","sourcesContent":["import * as React from 'react'\nimport { BudgetTotalInterface } from './../interfaces'\nconst BudgetTotal = (props: BudgetTotalInterface) => {\n  return (\n    <div className=\"budget-total\">\n      <h2>\n        <span className=\"budget-period\">Your {props.budgetPeriod}</span>\n        {' '}\n        <span className=\"budget-label\">budget:</span>\n        {' '}\n        <span\n          className={`budget-total ${props.budgetAmount - props.budgetPaid > 0 ? 'budget-total-positive' : 'budget-total-negative'}`}>\n          {props.budgetAmount - props.budgetPaid}\n        </span>\n        {' '}\n        <span className=\"budget-currency\">{props.budgetCurrency}</span>\n      </h2>\n    </div>\n  )\n}\n\nexport default BudgetTotal","import * as React from 'react'\n\nconst IconBin = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" id=\"Layer_41\" data-name=\"Layer 41\" viewBox=\"0 0 50 50\"><defs/><defs/><path d=\"M44 10h-9V8.6A6.6 6.6 0 0028.4 2h-6.8A6.6 6.6 0 0015 8.6V10H6a2 2 0 000 4h3v27.4a6.6 6.6 0 006.6 6.6h18.8a6.6 6.6 0 006.6-6.6V14h3a2 2 0 000-4zM19 8.6A2.6 2.6 0 0121.6 6h6.8A2.6 2.6 0 0131 8.6V10H19V8.6zm18 32.8a2.6 2.6 0 01-2.6 2.6H15.6a2.6 2.6 0 01-2.6-2.6V14h24v27.4z\" className=\"cls-1\"/><path d=\"M20 18.5a2 2 0 00-2 2v18a2 2 0 004 0v-18a2 2 0 00-2-2zM30 18.5a2 2 0 00-2 2v18a2 2 0 104 0v-18a2 2 0 00-2-2z\" className=\"cls-1\"/></svg>\n)\n\nexport default IconBin","import * as React from 'react'\nimport { BudgetItemInterface } from './../interfaces'\nimport IconBin from './icon-bin'\n\nconst BudgetItem = (props: BudgetItemInterface) => {\n  return (\n    <div className=\"budget-item\">\n      <div className=\"budget-item-paid\">\n        {/* Checkbox to mark the item as paid */}\n        <input\n          className=\"custom-checkbox-checkbox\"\n          type=\"checkbox\"\n          id={props.budgetItem.id}\n          checked={props.budgetItem.isPaid}\n          onChange={(event) => props.handleItemUpdate(event.target.value, props.budgetItem.id, 'isPaid')}\n        />\n\n        <label className=\"custom-checkbox-label\" htmlFor={props.budgetItem.id} />\n      </div>\n\n      <div className=\"budget-item-title\">\n        {/* Title of the item */}\n        <input\n          type=\"text\"\n          value={props.budgetItem.title}\n          onChange={(event) => props.handleItemUpdate(event.target.value, props.budgetItem.id, 'title')}\n        />\n      </div>\n\n      <div className=\"budget-item-date\">\n        {/* Date the item was paid */}\n        <input\n          type=\"date\"\n          value={props.budgetItem.date}\n          onChange={(event) => props.handleItemUpdate(event.target.value, props.budgetItem.id, 'date')}\n        />\n      </div>\n\n      <div className=\"budget-item-price\">\n        {/* Price of the item */}\n        <input\n          type=\"number\"\n          value={props.budgetItem.price}\n          onChange={(event) => props.handleItemUpdate(event.target.value, props.budgetItem.id, 'price')}\n        />\n        {' '}\n        <span>{props.budgetCurrency}</span>\n      </div>\n\n      <div className=\"budget-item-remove\">\n        {/* Delete item */}\n        <button className=\"btn btn-remove\" onClick={() => props.handleItemRemove(props.budgetItem.id)}><IconBin /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default BudgetItem","import * as React from 'react'\nimport { BudgetItemObjInterface, BudgetListInterface } from './../interfaces'\nimport BudgetItem from './budget-item'\n\nconst BudgetList = (props: BudgetListInterface) => {\n  return (\n    <div className=\"budget-list\">\n      {props.budgetItems.map((item: BudgetItemObjInterface) => {\n        return (\n          <BudgetItem\n            key={item.id}\n            budgetCurrency={props.budgetCurrency}\n            budgetItem={item}\n            handleItemUpdate={props.handleItemUpdate}\n            handleItemRemove={props.handleItemRemove}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default BudgetList","import * as React from 'react'\nimport shortid from 'shortid'\nimport { BudgetItemAddInterface } from './../interfaces'\n\nconst BudgetItemAdd = (props: BudgetItemAddInterface) => {\n  // Prepare BudgetItemAdd states\n  const [date, setDate] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [price, setPrice] = React.useState(0)\n  const [isPaid, setIsPaid] = React.useState(false)\n\n  function handleFormSubmit(event: React.FormEvent<HTMLFormElement>) {\n    // Prevent form from submitting\n    event.preventDefault()\n\n    // Create new item\n    props.handleAddItem({\n      date: date,\n      title: title,\n      price: price,\n      isPaid: isPaid,\n      id: shortid.generate()\n    })\n\n    // Reset form state\n    setDate('')\n    setTitle('')\n    setPrice(0)\n    setIsPaid(false)\n\n    // Close modal window\n    props.handleShowAddItem(!props.showAddItem)\n  }\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal-dialog\">\n        <button className=\"btn btn-cross\" onClick={() => props.handleShowAddItem(!props.showAddItem)}>⨯</button>\n\n        <form onSubmit={handleFormSubmit}>\n          <fieldset>\n            {/* Date the item was added */}\n            <label htmlFor=\"date\">Date of payment:</label>\n\n            <input\n              type=\"date\"\n              id=\"date\"\n              value={date}\n              onChange={(event) => setDate(event.target.value)}\n              required={true}\n            />\n          </fieldset>\n\n          <fieldset>\n            {/* Title of the item */}\n            <label htmlFor=\"title\">Item name:</label>\n\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n              required={true}\n            />\n          </fieldset>\n\n          <fieldset>\n            {/* Price of the item */}\n            <label htmlFor=\"price\">Item price:</label>\n\n            <input\n              type=\"number\"\n              id=\"price\"\n              value={price}\n              onChange={(event) => setPrice(parseInt(event.target.value, 10))}\n              min=\"0\"\n              step=\"1\"\n              required={true}\n            />\n          </fieldset>\n\n          <fieldset>\n            {/* Mark as paid */}\n            <input\n              className=\"custom-checkbox-checkbox\"\n              type=\"checkbox\"\n              id=\"isPaid\"\n              checked={isPaid}\n              onChange={() => setIsPaid(!isPaid)}\n            />\n\n            <label className=\"custom-checkbox-label\" htmlFor=\"isPaid\"> Item is already paid</label>\n          </fieldset>\n\n          <fieldset>\n            <input\n              className=\"btn btn-add\"\n              type=\"submit\"\n              value=\"+ Add item\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default BudgetItemAdd","import * as React from 'react'\n\nconst IconSettings = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" viewBox=\"0 0 896 1024\"><defs/><path d=\"M447.938 350C358.531 350 286 422.531 286 512c0 89.375 72.531 162.062 161.938 162.062 89.438 0 161.438-72.688 161.438-162.062-.001-89.469-72.001-162-161.438-162zm324.687 255.062l-29.188 70.312 52.062 102.25 6.875 13.5-72.188 72.188-118.436-55.937-70.312 28.875L505.75 945.5l-4.562 14.5H399.156L355 836.688l-70.312-29-102.404 51.938-13.5 6.75-72.156-72.125 55.875-118.5-28.969-70.25-109.065-35.626L0 565.188V463.219L123.406 419l28.969-70.188-51.906-102.469-6.844-13.438 72.062-72.062 118.594 55.844 70.219-29.031 35.656-109.188L394.75 64h102l44.188 123.469 70.125 29.031L713.5 164.531l13.625-6.844 72.125 72.062-55.875 118.406L772.25 418.5l109.375 35.656L896 458.75v101.938l-123.375 44.374z\"/></svg>\n)\n\nexport default IconSettings","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport BudgetTotal from './../components/budget-total'\nimport BudgetList from './../components/budget-list'\nimport BudgetItemAdd from './../components/budget-item-add'\nimport IconSettings from './../components/icon-settings'\nimport { BudgetItemObjInterface, HomePageInterface } from './../interfaces'\n\nconst HomePage = (props: HomePageInterface) => {\n  // Prepare homepage states\n  const [budgetPaid, setBudgetPaid] = React.useState(0)\n  const [showAddItem, setShowAddItem] = React.useState(false)\n\n  // Recalculate total budget\n  React.useEffect(() => {\n    // Prepare total costs\n    let costs = 0\n\n    // Iterate over items and add costs to total costs\n    props.budgetItems.forEach((item: BudgetItemObjInterface) => {\n      if (item.isPaid) {\n        costs += item.price\n      }\n    })\n\n    // Update budgetPaid state\n    setBudgetPaid(costs)\n  }, [props.budgetItems]) // Watch 'budgetItems' state for changes\n\n  // Handle local/session storage\n  function handleStorage(task: 'get' | 'update', newState: BudgetItemObjInterface[]) {\n    if (props.storageMethod === 'local') {\n      if (task === 'update') {\n        // Overwrite items in localStorage\n        window.localStorage.setItem('budget-app', JSON.stringify(newState))\n      } else {\n        // If there are any data in sessionStorage\n        if (window && window.localStorage && window.localStorage.getItem('budget-app')) {\n          // Extract the data from localStorage\n          const recoveredLocalData = window.localStorage.getItem('budget-app')\n\n          // If there data to be recovered\n          if (recoveredLocalData) {\n            // Update budgetItems state\n            props.setBudgetItems(JSON.parse(recoveredLocalData))\n          }\n        }\n      }\n    } else if (props.storageMethod === 'session') {\n      if (task === 'update') {\n        // Overwrite items in sessionStorage\n        window.sessionStorage.setItem('budget-app', JSON.stringify(newState))\n      } else {\n        // If there are any data in sessionStorage\n        if (window && window.sessionStorage && window.sessionStorage.getItem('budget-app')) {\n          // Extract the data from sessionStorage\n          const recoveredSessionData = window.sessionStorage.getItem('budget-app')\n\n          // If there data to be recovered\n          if (recoveredSessionData) {\n            // Update budgetItems state\n            props.setBudgetItems(JSON.parse(recoveredSessionData))\n          }\n        }\n      }\n    }\n  }\n\n  // Handle change of items\n  function handleItemUpdate(value: string, id: string, itemProperty: string) {\n    // Prepare new budgetItems state\n    const newBudgetItemsState: BudgetItemObjInterface[] = [...props.budgetItems]\n\n    switch (itemProperty) {\n      case 'isPaid':\n        // Find 'isPaid' property and update it with new value\n        newBudgetItemsState.find((item: BudgetItemObjInterface) => item.id === id)!.isPaid = !newBudgetItemsState.find((item: BudgetItemObjInterface) => item.id === id)!.isPaid\n        break\n      case 'price':\n        // Find 'price' property and update it with new value\n        newBudgetItemsState.find((item: BudgetItemObjInterface) => item.id === id)!.price = parseInt(value, 10)\n        break\n      case 'title':\n        // Find 'title' property and update it with new value\n        newBudgetItemsState.find((item: BudgetItemObjInterface) => item.id === id)!.title = value\n        break\n    }\n\n    // Update budgetItems state\n    props.setBudgetItems(newBudgetItemsState)\n\n    // Update local/session storage\n    handleStorage('update', newBudgetItemsState)\n  }\n\n  // Handle adding new item\n  function handleAddItem(payload: BudgetItemObjInterface) {\n    // prepare new budgetItemsState\n    const newBudgetItemsState = [...props.budgetItems]\n\n    // Add new item to newBudgetItemsState\n    newBudgetItemsState.push({\n      date: payload.date,\n      isPaid: payload.isPaid,\n      price: payload.price,\n      title: payload.title,\n      id: payload.id\n    })\n\n    // Update budgetItems state\n    props.setBudgetItems(newBudgetItemsState)\n\n    // Update local/session storage\n    handleStorage('update', newBudgetItemsState)\n  }\n\n  // Handle removing existing items\n  function handleItemRemove(id: string) {\n    // Find & remove correct budget item\n    let newBudgetItemsState =  props.budgetItems.filter((item: BudgetItemObjInterface) => item.id !== id)\n\n    // Update budgetItems state\n    props.setBudgetItems(newBudgetItemsState)\n\n    // Update local/session storage\n    handleStorage('update', newBudgetItemsState)\n  }\n\n  return (\n    <div>\n      <header>\n        <BudgetTotal\n          budgetPeriod={props.budgetPeriod}\n          budgetCurrency={props.budgetCurrency}\n          budgetAmount={props.budgetAmount}\n          budgetPaid={budgetPaid}\n        />\n\n        <Link className=\"btn btn-settings\" to=\"/settings\"><IconSettings /></Link>\n      </header>\n\n      <BudgetList\n        budgetCurrency={props.budgetCurrency}\n        budgetItems={props.budgetItems}\n        handleItemUpdate={handleItemUpdate}\n        handleItemRemove={handleItemRemove}\n      />\n\n      {showAddItem && (\n        <BudgetItemAdd\n          showAddItem={showAddItem}\n          handleShowAddItem={setShowAddItem}\n          handleAddItem={handleAddItem}\n        />\n      )}\n\n      <button\n        className=\"btn btn-add\"\n        onClick={() => setShowAddItem(!showAddItem)}\n      >+ <span className=\"btn-label\">Add item</span></button>\n    </div>\n  )\n}\nexport default HomePage","const currencyCodes = [\n    'AED', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'CHE', 'CHF', 'CHW', 'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XDR', 'XOF', 'XPF', 'XSU', 'XUA', 'YER', 'ZAR', 'ZMW', 'ZWL', 'AFN'\n  ]\n  \n  export default currencyCodes","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { SettingsPageInterface } from './../interfaces'\nimport currencyCodes from './../data/currency-codes'\n\nconst SettingsPage = (props: SettingsPageInterface) => (\n  <div>\n    <header>\n      <h2>Settings</h2>\n\n      <Link className=\"btn btn-cross btn-unstyled\" to=\"/\">⨯</Link>\n    </header>\n\n    <fieldset>\n      <label htmlFor=\"period\">Budget period:</label>\n\n      <select\n        onChange={(event) => props.setBudgetPeriod(event.target.value)}\n        name=\"period\"\n        id=\"period\"\n        defaultValue={props.budgetPeriod}\n      >\n        <option value=\"daily\">Daily</option>\n        <option value=\"monthly\">Monthly</option>\n        <option value=\"yearly\">Yearly</option>\n      </select>\n    </fieldset>\n\n    <fieldset>\n      <label htmlFor=\"currency\">Budget currency:</label>\n\n      <input\n        onChange={(event) => props.setBudgetCurrency(event.target.value)}\n        name=\"currency\"\n        id=\"currency\"\n        defaultValue={props.budgetCurrency}\n        list=\"currencyCodes\"\n      />\n\n      <datalist id=\"currencyCodes\">\n        {currencyCodes.map(code => <option key={code} value={code} />)}\n      </datalist>\n    </fieldset>\n\n    <fieldset>\n      <label htmlFor=\"budget\">Budget size:</label>\n\n      <input\n        onChange={(event) => props.setBudgetAmount(parseInt(event.target.value, 10))}\n        type=\"number\"\n        name=\"budget\"\n        id=\"budget\"\n        defaultValue={props.budgetAmount}\n      />\n    </fieldset>\n\n    <fieldset>\n      <label htmlFor=\"storage\">Preferred storage method:</label>\n\n      <select\n        onChange={(event) => props.setStorageMethod(event.target.value)}\n        name=\"storage\"\n        id=\"storage\"\n        defaultValue={props.storageMethod}\n      >\n        <option value=\"none\">None</option>\n        <option value=\"local\">Local storage</option>\n        <option value=\"session\">Session storage</option>\n      </select>\n    </fieldset>\n\n    <p><small><em>* All changes are saved automatically.</em></small></p>\n  </div>\n)\n\nexport default SettingsPage","import * as React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/home'\nimport SettingsPage from './pages/settings'\nimport { BudgetItemObjInterface } from './interfaces'\n\nconst AppRouter = () => {\n  // Prepare default app states\n  const [budgetItems, setBudgetItems] = React.useState<BudgetItemObjInterface[]>([])\n  const [budgetPeriod, setBudgetPeriod] = React.useState('monthly')\n  const [budgetCurrency, setBudgetCurrency] = React.useState('USD')\n  const [budgetAmount, setBudgetAmount] = React.useState(2500)\n  const [storageMethod, setStorageMethod] = React.useState('none')\n\n  // Restore settings & items from local/session storage if any exists\n  React.useEffect(() => {\n    // Check if there are any existing data for settings in sessionStorage\n    if (window && window.sessionStorage && window.sessionStorage.getItem('budget-app-settings') !== null && window.sessionStorage.getItem('budget-app-settings')!.length > 0) {\n      // Get data from sessionStorage\n      const recoveredSettings = window.sessionStorage.getItem('budget-app-settings')\n\n      // If storage contains any data process them\n      if (recoveredSettings) {\n        // Get all recovered state data\n        const { oldBudgetPeriod, oldBudgetCurrency, oldBudgetAmount, oldStorageMethod } = JSON.parse(recoveredSettings)\n\n        // Update all settings\n        setBudgetPeriod(oldBudgetPeriod)\n        setBudgetCurrency(oldBudgetCurrency)\n        setBudgetAmount(oldBudgetAmount)\n        setStorageMethod(oldStorageMethod)\n      }\n    } else if (window && window.localStorage && window.localStorage.getItem('budget-app-settings') !== null && window.localStorage.getItem('budget-app-settings')!.length > 0) {\n      // Of if there are any existing data for settings in localStorage\n      // Get data from localStorage\n      const recoveredSettings = window.localStorage.getItem('budget-app-settings')\n\n      // If storage contains any data process them\n      if (recoveredSettings) {\n        // Get all recovered state data\n        const { oldBudgetPeriod, oldBudgetCurrency, oldBudgetAmount, oldStorageMethod } = JSON.parse(recoveredSettings)\n\n        // Update all settings\n        setBudgetPeriod(oldBudgetPeriod)\n        setBudgetCurrency(oldBudgetCurrency)\n        setBudgetAmount(oldBudgetAmount)\n        setStorageMethod(oldStorageMethod)\n      }\n    }\n\n    // Check if there are any existing data for items in sessionStorage\n    if (window && window.sessionStorage && window.sessionStorage.getItem('budget-app') !== null && window.sessionStorage.getItem('budget-app')!.length > 0) {\n      // Get items data from sessionStorage\n      const recoveredItems = window.sessionStorage.getItem('budget-app')\n\n      // If there are any items to be recovered\n      if (recoveredItems) {\n        // Extract recovered items data\n        const { oldItems } = JSON.parse(recoveredItems)\n\n        // Update budgetItems state\n        setBudgetItems(oldItems)\n      }\n    } else if (window && window.localStorage && window.localStorage.getItem('budget-app') !== null && window.localStorage.getItem('budget-app')!.length > 0) {\n      // Of if there are any existing data for items in localStorage\n      // Get items data from localStorage\n      const recoveredItems = window.localStorage.getItem('budget-app')\n\n      // If there are any items to be recovered\n      if (recoveredItems) {\n        // Extract recovered items data\n        const { oldItems } = JSON.parse(recoveredItems)\n\n        // Update budgetItems state\n        setBudgetItems(oldItems)\n      }\n    }\n  }, [])// Run on initial render\n\n  // Update item if budgetItems or storageMethod changes\n  React.useEffect(() => {\n    if (storageMethod === 'session') {\n      // Save settings to sessionStorage\n      window.sessionStorage.setItem('budget-app', JSON.stringify({\n        oldItems: budgetItems\n      }))\n\n      // Remove duplicate data in localStorage\n      window.localStorage.removeItem('budget-app')\n    } else if (storageMethod === 'local') {\n      // Save settings to localStorage\n      window.localStorage.setItem('budget-app', JSON.stringify({\n        oldItems: budgetItems\n      }))\n\n      // Remove duplicate data in sessionStorage\n      window.sessionStorage.removeItem('budget-app')\n    } else if (storageMethod === 'none') {\n      // Remove all previous data from both storages\n      window.localStorage.removeItem('budget-app')\n      window.sessionStorage.removeItem('budget-app')\n    }\n  }, [budgetItems, storageMethod])// Watch budgetItems & storageMethod props\n\n  // Update settings if budgetPeriod, budgetCurrency, budgetAmount or storageMethod changes\n  React.useEffect(() => {\n    if (storageMethod === 'session') {\n      // Save settings to sessionStorage\n      window.sessionStorage.setItem('budget-app-settings', JSON.stringify({\n        oldBudgetPeriod: budgetPeriod,\n        oldBudgetCurrency: budgetCurrency,\n        oldBudgetAmount: budgetAmount,\n        oldStorageMethod: storageMethod\n      }))\n\n      // Remove duplicate data in localStorage\n      window.localStorage.removeItem('budget-app-settings')\n    } else if (storageMethod === 'local') {\n      // Save settings to localStorage\n      window.localStorage.setItem('budget-app-settings', JSON.stringify({\n        oldBudgetPeriod: budgetPeriod,\n        oldBudgetCurrency: budgetCurrency,\n        oldBudgetAmount: budgetAmount,\n        oldStorageMethod: storageMethod\n      }))\n\n      // Remove duplicate data in sessionStorage\n      window.sessionStorage.removeItem('budget-app-settings')\n    } else if (storageMethod === 'none') {\n      // Remove all previous data from both storages\n      window.localStorage.removeItem('budget-app-settings')\n      window.sessionStorage.removeItem('budget-app-settings')\n    }\n  }, [budgetPeriod, budgetCurrency, budgetAmount, storageMethod])// Watch budgetPeriod, budgetCurrency, budgetAmount & storageMethod props\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Switch>\n          {/* Add homepage */}\n          <Route path=\"/\" exact={true}>\n            <HomePage\n              budgetItems={budgetItems}\n              setBudgetItems={setBudgetItems}\n              budgetAmount={budgetAmount}\n              budgetPeriod={budgetPeriod}\n              budgetCurrency={budgetCurrency}\n              storageMethod={storageMethod}\n            />\n          </Route>\n\n          {/* Add settings */}\n          <Route path=\"/settings\">\n            <SettingsPage\n              budgetPeriod={budgetPeriod}\n              budgetCurrency={budgetCurrency}\n              budgetAmount={budgetAmount}\n              storageMethod={storageMethod}\n              setBudgetPeriod={setBudgetPeriod}\n              setBudgetCurrency={setBudgetCurrency}\n              setBudgetAmount={setBudgetAmount}\n              setStorageMethod={setStorageMethod}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default AppRouter","import * as React from 'react'\nimport { render } from 'react-dom'\nimport AppRouter from './app-router'\nimport './styles/styles.css'\n\nconst rootElement = document.getElementById('root')\nrender(<AppRouter />, rootElement)"],"sourceRoot":""}